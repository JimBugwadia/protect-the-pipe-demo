---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-networkpolicy
  annotations:
    policies.kyverno.io/title: Generate NetworkPolicy
    policies.kyverno.io/category: Tekton
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Namespace
    kyverno.io/kyverno-version: 1.7.2
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >- 
      Generate a default NetworkPolicy
spec:
  rules:
  - name: default-deny
    match:
      resources:
        kinds:
        - Namespace
    exclude:
      resources:
        namespaces:
        - common
    generate:
      kind: NetworkPolicy
      name: default-deny
      namespace: "{{request.object.metadata.name}}"
      synchronize: true
      data:
        spec:
          podSelector: {}
          policyTypes:
          - Ingress
          - Egress
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: generate-defaults
  annotations:
    policies.kyverno.io/title: Generate Namespace Defaults
    policies.kyverno.io/category: Tekton
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Namespace
    kyverno.io/kyverno-version: 1.7.2
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >- 
      Generate required defaults including secrets, roles, role bindings, and a service account
spec:
  rules:
  - name: sync-image-push-secret
    match:
      resources:
        kinds:
        - Namespace
    exclude:
      resources:
        namespaces:
        - common
    generate:
      kind: Secret
      name: img-registry-secret
      namespace: "{{request.object.metadata.name}}"
      synchronize: true
      clone:
        namespace: common
        name: img-registry-secret
  - name: sync-cosign-secret
    match:
      resources:
        kinds:
        - Namespace
    exclude:
      resources:
        namespaces:
        - common
    generate:
      kind: Secret
      name: cosign-private-key
      namespace: "{{request.object.metadata.name}}"
      synchronize: true
      clone:
        namespace: common
        name: cosign-private-key
  - name: sync-service-account
    match:
      resources:
        kinds:
        - Namespace
    exclude:
      resources:
        namespaces:
        - common
    generate:
      kind: ServiceAccount
      name: pipeline-account
      namespace: "{{request.object.metadata.name}}"
      synchronize: true
      data:
        secrets:
        - name: img-registry-secret
  - name: sync-role
    match:
      resources:
        kinds:
        - Namespace
    exclude:
      resources:
        namespaces:
        - common
    generate:
      kind: Role
      name: pipeline-role
      namespace: "{{request.object.metadata.name}}"
      synchronize: true
      clone:
        namespace: common
        name: pipeline-role
  - name: sync-role-binding
    match:
      resources:
        kinds:
        - Namespace
    exclude:
      resources:
        namespaces:
        - common
    generate:
      kind: RoleBinding
      name: pipeline-role-binding
      namespace: "{{request.object.metadata.name}}"
      synchronize: true
      clone:
        namespace: common
        name: pipeline-role-binding
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: generate-api-secrets
  annotations:
    policies.kyverno.io/title: Generate Pipeline Account
    policies.kyverno.io/category: Tekton
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Namespace
    kyverno.io/kyverno-version: 1.7.2
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >- 
      Generate secret for Pipeline sccount. This executes after the SA is created.
spec:
  rules:
  - name: sync-kubeapi-secret
    match:
      resources:
        kinds:
        - ServiceAccount
        name: "pipeline-account"
    exclude:
      resources:
        namespaces:
        - common
    generate:
      kind: Secret
      name: kube-api-secret
      namespace: "{{request.namespace}}"
      synchronize: true
      data:
        metadata:
          annotations:
            kubernetes.io/service-account.name: pipeline-account
        type: kubernetes.io/service-account-token
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: generate-pvc
  annotations:
    policies.kyverno.io/title: Generate PVC
    policies.kyverno.io/category: Tekton
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Namespace
    kyverno.io/kyverno-version: 1.7.2
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >- 
      Generate default PVC
spec:
  rules:
  - name: create-pvc
    match:
      resources:
        kinds:
        - Namespace
    exclude:
      resources:
        namespaces:
        - common
    generate:
      kind: PersistentVolumeClaim
      name:  ptp-demo-pvc
      namespace: "{{request.namespace}}"
      synchronize: true
      data:
        spec:
          accessModes:
          - ReadWriteMany
          resources:
            requests:
              storage: 5Gi